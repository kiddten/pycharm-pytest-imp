buildscript {
    ext.kotlin_version = '1.4.32'
    ext.ide_version = '213-EAP-SNAPSHOT'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.0'
}

apply plugin: 'kotlin'

group 'com.y4kstudios'
version '0.5.2'

sourceCompatibility = 10

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 10
    }
}

repositories {
    mavenCentral()

    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://www.jetbrains.com/intellij-repository/snapshots" }
    maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
    maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }
    maven { url "https://www.myget.org/F/rd-snapshots/maven/" }
}

dependencies {
    compile 'org.tomlj:tomlj:1.0.0'
    compile 'ca.szc.configparser:java-configparser:0.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        // NOTE: release-380 appears to have been removed from the repo
        substitute module('org.jetbrains.kotlin:kotlin-reflect:1.4.32-release-380') using module("org.jetbrains.kotlin:kotlin-reflect:1.4.32")
    }
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    type.set('PY')
    version.set(ide_version)
    pluginName.set('pytest imp')

    plugins.set([
        'python',
        'PsiViewer:213-SNAPSHOT',
        'org.toml.lang:213.3714.440',
    ])
}
patchPluginXml {
    changeNotes.set(extractChangeNotes())
    pluginDescription.set('''
        <p>pytest improvements plugin for PyCharm</p>
        <p>Improvements include:</p>
        <ul>
          <li>Support for custom test method/class naming from pytest.ini or pyproject.toml</li>
          <li>Support for pytest-lambda fixtures</li>
          <li>Proper scoping for pytest fixtures</li>
        </ul>
    ''')

    sinceBuild.set("212")
    untilBuild.set("213.*")
}

publishPlugin {
    channels = ['stable']
    token = getProperty('publishToken')
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "10"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "10"
    }
}

// Very primitive changelog extraction code
// Source: https://github.com/JetBrains/ideavim/blob/d5055506b019b7cdb4ba786a086dfc9385a42705/build.gradle#L107-L129
def extractChangeNotes() {
    def header = '<ul>\n'
    def footer = '</ul>\n<p>See also the complete <a href="https://github.com/theY4Kman/pycharm-pytest-imp/blob/master/CHANGELOG.md">changelog</a>.</p>'

    def startLine, endLine, skipAfterStart
    startLine = "$version, "
    endLine = "----"
    skipAfterStart = 1

    def skipLines = 0
    def changeType = ''
    def startSaving = false
    def res = new StringBuilder(header)
    new File('./CHANGELOG.md').eachLine { line ->
        if (skipLines) {
            skipLines--
            return
        }

        if (startSaving) {
            if (line.startsWith(endLine)) {
                startSaving = false
            }
            else if (line.startsWith('**') && line.endsWith(':**')) {
                changeType = line.substring(2, line.length() - 3)
                changeType = changeType.replaceFirst('s$', '')
            }
            else if (line.startsWith(' - ')) {
                def item = line.substring(3)
                res.append("  <li><b>$changeType:</b> $item</li>").append('\n')
            }
        }
        else {
            if (line.startsWith(startLine)) {
                startSaving = true
                skipLines = skipAfterStart
            }
        }
    }

    res.append(footer)
    return res.toString()
}
